Alteryx.Gui.BeforeLoad = function(manager, AlteryxDataItems){
  console.log("Before Load ----");
  var dataItem = makeDataItem(manager, AlteryxDataItems);
  dataItem('classification', {value: true}, 'SimpleBool')
  dataItem('regression', {value: false}, 'SimpleBool')
};

Alteryx.Gui.AfterLoad = function(manager){
  console.log("After Load ----");
  syncRadio(manager, 'modelType')
};

Alteryx.Gui.Annotation = function(manager){
  
};

function displayTarget(targetId, di, cond) {
  var resize = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

  var condition = void 0;
  if (typeof cond == 'undefined') {
    condition = function condition(v) {
      return v;
    };
  } else if (typeof cond == 'string') {
    condition = function condition(v) {
      return v === cond;
    };
  } else {
    condition = cond;
  }
  var dataItem = Alteryx.Gui.manager.GetDataItemByDataName(di);
  var targetDiv = document.getElementById(targetId);
  function display(v) {
    targetDiv.style.display = condition(v) ? 'block' : 'none';
    //console.log("Resizing ", v);
    //window.dispatchEvent(new Event('resize'));
  }
  dataItem.BindUserDataChanged(display);
  display(dataItem.value);
}

function syncRadio(manager, id){
  console.log("Syncing radio...")
  var di = manager.GetDataItemByDataName(id)
  var vals = di.StringList.enums.map(function(d){
    return d.dataName
  })
  console.log(vals)
  var setRadioVal = function(v){
    vals.map(function(v_){
      manager.GetDataItemByDataName(v_).setValue(v_ === v)
      console.log(manager.GetDataItemByDataName(v_))
    })
  }
  setRadioVal(di.getValue())
  di.BindDataChanged(function(v){
    setRadioVal(v)
  })
}

function createUIObject(x) {
  function a2ui(d) {
    return { uiobject: d, dataname: d };
  }
  function o2ui(d) {
    return { uiobject: x[d], dataname: d };
  }
  const f = (x.constructor === Array) ? a2ui : o2ui;
  const y = (x.constructor === Array) ? x : Object.keys(x);
  return y.map(f);
}

function makeDataItem(manager, AlteryxDataItems) {
  return function f(id, props) {
    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'SimpleString';

    var value = void 0;
    var dtype = void 0;
    /*
    if (props.values) {
      dtype = props.values.constructor === Array
        ? 'MultiStringSelector'
        : 'StringSelector';
    } else {
      dtype = type;
    }
    */
    dtype = type;
    var di = manager.GetDataItem(id);
    var newItem = di || new AlteryxDataItems[dtype]({ id: id, dataname: id });
    if (dtype === 'StringSelector' || dtype === 'MultiStringSelector') {
      var data = createUIObject(props.values);
      newItem.setStringList(data);
      value = props.value ? props.value : data[0].dataname;
    } else {
      value = props.value;
    }
    manager.AddDataItem(newItem);
    if (value) newItem.setValue(value);
    return newItem;
  };
}
